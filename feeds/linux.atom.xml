<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Andy's blog - linux</title><link href="https://bingfei.me/" rel="alternate"></link><link href="https://bingfei.me/feeds/linux.atom.xml" rel="self"></link><id>https://bingfei.me/</id><updated>2019-02-17T17:30:00+08:00</updated><entry><title>树莓派局域网代理加速 Tetris® 99 for Nintendo Switch</title><link href="https://bingfei.me/blog/2019/raspberry-pi-as-proxy-server-in-lan" rel="alternate"></link><published>2019-02-17T17:30:00+08:00</published><updated>2019-02-17T17:30:00+08:00</updated><author><name>Andy</name></author><id>tag:bingfei.me,2019-02-17:/blog/2019/raspberry-pi-as-proxy-server-in-lan</id><summary type="html">&lt;p&gt;通过设置 privoxy over ss-local 作为局域网代理服务器，来加速 Switch 的网络连接&lt;/p&gt;</summary><content type="html">&lt;h2 id="1-tetris-99"&gt;1. Tetris® 99 的网络连接问题&lt;a class="headerlink" href="#1-tetris-99" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;任天堂在 2 月 13 日推出了一款大逃杀模式的俄罗斯方块游戏 &lt;a href="https://www.nintendo.com/games/detail/tetris-99-switch"&gt;Tetris® 99 for Nintendo Switch&lt;/a&gt;。作为一名 Tetris 老玩家，自然是不能错过。由于是在线对战游戏，对网络质量要求较高。对战过程中经常出现网络连接失败导致自动退出，气得很想摔 Switch。&lt;/p&gt;
&lt;p&gt;最简单的方法是&lt;a href="https://twitter.com/ibingfei/status/1096354236047081472"&gt;修改 Switch 网络设置的 DNS&lt;/a&gt;，但效果并不好，下载游戏很快，但对战更容易掉线。&lt;/p&gt;
&lt;p&gt;给路由器添加代理支持是个好办法，但我现在用的路由器不支持，安装插件后无法正常连接代理节点，只好另辟蹊径。&lt;/p&gt;
&lt;p&gt;Switch 的网络接入点里面有 HTTP 代理的设置项，而我的 MacBook 上有 &lt;a href="https://nssurge.com/"&gt;Surge&lt;/a&gt; 支持局域网访问，此法可行。但是这个方案需要 MacBook 一直保持在唤醒状态，休眠的话 Tetris 99 立刻掉线给你看，所以只能作为临时方案使用。&lt;/p&gt;
&lt;p&gt;正好抽屉里还有个 24 小时运行的树莓派，做局域网 HTTP 代理服务器最合适不过了。shadowsocks 是最流行的代理方式，但它的官方客户端只支持 socks5 协议的流量，因此我们还需要一个将 HTTP 流量转换为 socks5 流量的工具，&lt;a href="https://wiki.archlinux.org/index.php/Privoxy_(简体中文)"&gt;privoxy&lt;/a&gt; 可以做到。&lt;/p&gt;
&lt;h2 id="2-shadowsocks"&gt;2. 给树莓派安装 shadowsocks&lt;a class="headerlink" href="#2-shadowsocks" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;首先，安装 &lt;a href="https://github.com/shadowsocks/shadowsocks-libev"&gt;shadowsocks-libev&lt;/a&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;配置节点信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo vim /etc/shadowsocks-libev/config.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;文件格式如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;REMOTE-SERVER-IP-OR-DOMAIN&amp;quot;,
    &amp;quot;server_port&amp;quot;:&amp;quot;REMOTE-PORT&amp;quot;,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;YOUR-PASSWORD&amp;quot;,
    &amp;quot;method&amp;quot;:&amp;quot;YOUR-METHOD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这时运行 &lt;code&gt;ss-local&lt;/code&gt; 命令，你就可以在的前台看到节点连接情况。但当你关闭 SSH 会话时，这个进程也会停止，因此需要把它设为服务运行。&lt;/p&gt;
&lt;h3 id="ss-local"&gt;设置 &lt;code&gt;ss-local&lt;/code&gt; 服务&lt;a class="headerlink" href="#ss-local" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;编辑 &lt;code&gt;ss-local&lt;/code&gt; 服务的配置文件 &lt;code&gt;/lib/systemd/system/ss-local.service&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo vim /lib/systemd/system/ss-local.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;文件内容如下（格式参考了 &lt;code&gt;/lib/systemd/system/shadowsocks-libev.service&lt;/code&gt;）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Shadowsocks-libev Default Client Service&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Documentation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;man:ss-local&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;simple&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;EnvironmentFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/etc/default/shadowsocks-libev&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;nobody&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;nogroup&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;LimitNOFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;32768&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/ss-local -c /etc/shadowsocks-libev/config.json&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;启用 &lt;code&gt;ss-local.service&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo systemctl start ss-local.service  &lt;span class="c1"&gt;# 启动服务&lt;/span&gt;
$ sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; ss-local.service &lt;span class="c1"&gt;# 设置开机自启动&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;现在 &lt;code&gt;ss-local.service&lt;/code&gt; 服务已经成功运行了，测试一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ curl --socks5 localhost:1080 ipconfig.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你应该看到输出了远程 ss 代理节点的 IP 地址。&lt;/p&gt;
&lt;h2 id="3-privoxy-http"&gt;3. 安装 privoxy 转发 HTTP 流量&lt;a class="headerlink" href="#3-privoxy-http" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Privoxy_(简体中文)"&gt;privoxy&lt;/a&gt; 是一个 HTTP 协议过滤代理软件，安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt-get install privoxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;修改配置文件 &lt;code&gt;/etc/privoxy/config&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo vim /etc/privoxy/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在文件底部添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;forward-socks5 / 127.0.0.1:1080 . # 转发目的地址，注意末尾有一个空格和点号
listen-address  0.0.0.0:8010      # 监听局域网本机地址和端口
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;privoxy.service&lt;/code&gt; 服务在安装时已经启用，可以通过 &lt;code&gt;systemctl status privoxy.service&lt;/code&gt; 来确认，现在重启该服务：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo systemctl restart privoxy.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;现在 &lt;code&gt;privoxy.service&lt;/code&gt; 服务已经成功运行了，测试一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ curl -x, --proxy localhost:8010 ipconfig.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你应该看到输出了远程 ss 代理节点的 IP 地址。&lt;/p&gt;
&lt;h2 id="4"&gt;4. 最后一步&lt;a class="headerlink" href="#4" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;树莓派的代理服务已经成功运行，现在还需要在路由器的设置里面把树莓派的 IP 固定下来，以免每次树莓派切换 IP 还需要更改相应的 Switch 设置。&lt;/p&gt;
&lt;p&gt;如果你设置的静态 IP 和当前不一致，需要重启一下树莓派的网络服务：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo ifconfig wlan0 down&lt;span class="p"&gt;;&lt;/span&gt; sleep &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; sudo ifconfig wlan0 up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后在 Switch 的网络接入点配置里添加代理的 IP （树莓派的静态 IP）和端口号 8010，保存并重新连接此接入点，提示连接成功，即可开始体验 Tetris® 99 了。&lt;/p&gt;
&lt;p&gt;彩蛋：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tetris® 99 screenshot" src="https://pbs.twimg.com/media/DznlORWU8AELB0h.jpg"&gt;&lt;/p&gt;</content><category term="linux"></category><category term="linux"></category><category term="raspberrypi"></category></entry><entry><title>树莓派3零附件配置 Wi-Fi 和 SSH</title><link href="https://bingfei.me/blog/2018/raspberry-pi-3-setup" rel="alternate"></link><published>2018-01-03T17:30:00+08:00</published><updated>2018-01-03T17:30:00+08:00</updated><author><name>Andy</name></author><id>tag:bingfei.me,2018-01-03:/blog/2018/raspberry-pi-3-setup</id><summary type="html">&lt;p&gt;在没有外接键盘和显示器的条件下，配置树莓派通过 Wi-Fi 进行 SSH 登录&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://raspberrypi.org/"&gt;树莓派&lt;/a&gt;是一款基于 Linux 的单片机，由于体积小巧，价格低廉，可以用来学习 Linux 系统，编写并运行小型应用，做&lt;a href="https://kodi.tv/"&gt;家庭影音服务中心&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;几天前朋友送给我一块&lt;a href="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/"&gt;树莓派 3B&lt;/a&gt;，拥有四核 1.2GHz 64 位 ARM CPU，1GB LPDDR2 内存，四个 USB 2.0 接口，一个 MicroSD 卡槽，一个百兆以太网接口，支持 Wi-Fi 802.11n 和 蓝牙 4.1。&lt;/p&gt;
&lt;h2 id="1"&gt;1. 安装系统&lt;a class="headerlink" href="#1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;树莓派官方的操作系统 &lt;a href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Raspbian&lt;/a&gt; 有三个版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raspbian with desktop and recommended software&lt;/li&gt;
&lt;li&gt;Raspbian with desktop&lt;/li&gt;
&lt;li&gt;Raspbian Lite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我安装的是非桌面版本 Raspbian Lite，通过烧录工具 &lt;a href="https://www.tweaking4all.com/software/macosx-software/macosx-apple-pi-baker/"&gt;ApplePi-Baker&lt;/a&gt; for macOS 把下载好的镜像文件&lt;a href="https://sspai.com/post/38542"&gt;写入 SD 卡&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="2-ssh"&gt;2. 启用 SSH&lt;a class="headerlink" href="#2-ssh" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;几乎所有的教程都会要求使用外接键盘和显示器连接树莓派进行接下来的操作。如果没有这些附件怎么办呢？办法是有的。&lt;/p&gt;
&lt;p&gt;SSH 默认状态下是关闭的，启用的方法是在 Raspbian 系统目录 &lt;code&gt;/mnt/sdc1&lt;/code&gt; 下创建一个名为 &lt;code&gt;ssh&lt;/code&gt; 的空文件。&lt;/p&gt;
&lt;h2 id="3-wi-fi"&gt;3. 启用自动连接 Wi-Fi&lt;a class="headerlink" href="#3-wi-fi" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在启用 SSH 的情况下，可以通过网络连接树莓派，比如网线或者 Wi-Fi。如果你恰好和我一样没有网线，或者只是讨厌给树莓派多插一条线的话，还可以通过 Wi-Fi 进行连接。&lt;/p&gt;
&lt;p&gt;Wi-Fi 默认状态也是关闭的，幸运的是我找到了这个&lt;a href="https://raspberrypi.stackexchange.com/questions/37920/how-do-i-set-up-networking-wifi-static-ip-address/37921#37921"&gt;帖子&lt;/a&gt;，里面介绍了在烧录系统后直接配置 Wi-Fi 的方法。&lt;/p&gt;
&lt;p&gt;Raspbian 在启动时会检查 &lt;code&gt;/boot&lt;/code&gt; 目录下的 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 文件并把它移动到 &lt;code&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt; （如果文件已存在则会被覆盖），可以在这里进行 Wi-Fi 连接的参数配置。&lt;/p&gt;
&lt;p&gt;在 Raspbian 根目录下新建 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 文件并添加进下面几行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ctrl_interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wpa_supplicant&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GROUP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;netdev&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;update_config&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SSID&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;psk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PASSWORD&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后，替换 &lt;code&gt;SSID&lt;/code&gt; 和 &lt;code&gt;PASSWORD&lt;/code&gt; 为你希望连接的 Wi-Fi 名称和密码。&lt;/p&gt;
&lt;h2 id="4-wi-fi-ssh"&gt;4. 运行树莓派并通过 Wi-Fi 进行 SSH 登录&lt;a class="headerlink" href="#4-wi-fi-ssh" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;现在你可以把树莓派插卡通电放到角落里了。在终端中输入 &lt;code&gt;ssh pi@raspberrypi.local&lt;/code&gt; 进行登录，使用 &lt;code&gt;raspberry&lt;/code&gt; 作为初始密码。现在你应该已经登入了树莓派，可以按照自己的想法使用它了。&lt;/p&gt;
&lt;p&gt;希望这篇文章对你有所帮助。&lt;/p&gt;</content><category term="linux"></category><category term="linux"></category><category term="raspberrypi"></category></entry></feed>